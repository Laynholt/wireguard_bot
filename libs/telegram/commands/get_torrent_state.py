from .base import *

class GetTorrentStateCommand(BaseCommand):
    def __init__(
        self,
        database: UserDatabase
    ) -> None:
        super().__init__(
            database
        )
        self.command_name = BotCommand.TORRENT_STATE
    
    
    async def execute(self, update: Update, context: CallbackContext) -> Optional[bool]:
        """
        –ö–æ–º–∞–Ω–¥–∞ /get_torrent_state: –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤.
        """
        if update.effective_user is None:
            if (curr_frame := inspect.currentframe()):
                logger.error(f'Update effective_user is None –≤ —Ñ—É–Ω–∫—Ü–∏–∏ {curr_frame.f_code.co_name}')
            return
        
        if context.user_data is None:
            if (curr_frame := inspect.currentframe()):
                logger.error(f'Context user_data is None –≤ —Ñ—É–Ω–∫—Ü–∏–∏ {curr_frame.f_code.co_name}')
            return
         
        telegram_id = update.effective_user.id

        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É [get_torrent_state] -> Tid [{telegram_id}].")
        
        try:
            if update.message is not None:
                status = wireguard.check_torrent_blocking_status()
                if status == "enabled":
                    status = "‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –≤–∫–ª—é—á–µ–Ω–∞"
                elif status == "disabled":
                    status = "‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞"
                else:
                    status = "‚ùì –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
                
                await update.message.reply_text(
                    f"<b>üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤:</b>\n{status}.",
                    parse_mode="HTML"
                )
                
        finally:
            await self._end_command(update, context)