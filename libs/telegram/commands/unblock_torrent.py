from .base import *

class UnblockTorrentCommand(BaseCommand):
    def __init__(
        self,
        database: UserDatabase
    ) -> None:
        super().__init__(
            database
        )
        self.command_name = BotCommand.TORRENT_UNBLOCK
    
    
    async def execute(self, update: Update, context: CallbackContext) -> Optional[bool]:
        """
        –ö–æ–º–∞–Ω–¥–∞ /unblock_torrent: —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–æ—Ä—Ä–µ–Ω—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
        """
        if update.effective_user is None:
            if (curr_frame := inspect.currentframe()):
                logger.error(f'Update effective_user is None –≤ —Ñ—É–Ω–∫—Ü–∏–∏ {curr_frame.f_code.co_name}')
            return
        
        if context.user_data is None:
            if (curr_frame := inspect.currentframe()):
                logger.error(f'Context user_data is None –≤ —Ñ—É–Ω–∫—Ü–∏–∏ {curr_frame.f_code.co_name}')
            return
         
        telegram_id = update.effective_user.id

        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É [unblock_torrent] -> Tid [{telegram_id}].")
        
        need_restart_wireguard = False
        try:
            status = wireguard.check_torrent_blocking_status()
            if status == "enabled":
                result = wireguard.remove_torrent_blocking()
                if update.message is not None:    
                    await update.message.reply_text(
                        (
                            'üîÑ –û—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤..'
                            f'\n{result.description}'
                        )
                    )
                if result.status is True:
                    need_restart_wireguard = True
                    if update.message is not None:    
                        await update.message.reply_text(
                            (
                                'üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:'
                                f'\n{wireguard.get_current_rules(html_formatting=True).description}'
                            ),
                            parse_mode="HTML"
                        )
                    
            elif status == "disabled":
                if update.message is not None:    
                    await update.message.reply_text(
                        "‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞."
                    )
                
            else:
                if update.message is not None:    
                    await update.message.reply_text(
                        "‚ùì –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
                    )
                
        finally:
            await self._end_command(update, context)
        
        return need_restart_wireguard
        